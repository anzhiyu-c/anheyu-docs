name: 🚀 Deploy SSG to Baota Server

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  deploy:
    name: 🏗️ Build and Deploy SSG
    runs-on: ubuntu-latest

    steps:
      # 1. 检出代码
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      # 2. 设置 pnpm
      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      # 3. 设置 Node.js 环境
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"

      # 4. 安装依赖
      - name: 📦 Install dependencies
        run: pnpm install

      # 5. 构建静态站点
      - name: 🏗️ Build static site
        run: pnpm run build

      # 6. 创建静态站点部署包
      - name: 📦 Create static deployment package
        run: |
          # 检查构建产物
          if [ ! -d "out" ]; then
            echo "❌ Build output directory 'out' not found!"
            echo "📂 Available directories:"
            ls -la
            exit 1
          fi

          echo "📁 Contents of out directory:"
          ls -la out/

          # 检查关键文件
          echo "🔍 Checking key files in out directory:"
          [ -f "out/index.html" ] && echo "✅ index.html found" || echo "❌ index.html missing"
          [ -f "out/static.json" ] && echo "✅ static.json found" || echo "❌ static.json missing"
          [ -d "out/_next" ] && echo "✅ _next directory found" || echo "❌ _next directory missing"

          # 统计文件数量
          FILE_COUNT=$(find out -type f | wc -l)
          echo "📊 Total files in out directory: $FILE_COUNT"

          # 压缩静态文件
          echo "📦 Creating deployment package..."
          cd out
          tar -czf ../dev-anheyu-com-static-$(date +%Y%m%d-%H%M%S).tar.gz .
          cd ..

          # 创建最新版本的软链接
          ln -sf dev-anheyu-com-static-$(date +%Y%m%d-%H%M%S).tar.gz dev-anheyu-com-static-latest.tar.gz

          # 验证压缩包
          echo "🔍 Verifying deployment package:"
          echo "📦 Package size: $(ls -lh dev-anheyu-com-static-latest.tar.gz | awk '{print $5}')"
          echo "📂 Package contents (first 10 files):"
          tar -tzf dev-anheyu-com-static-latest.tar.gz | head -10

          echo "✅ Static deployment package created successfully"

      # 7. 准备部署环境
      - name: 🚀 Prepare deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          timeout: 60s
          command_timeout: 10m
          script: |
            echo "🚀 Starting SSG deployment..."

            # 设置变量
            PROJECT_DIR="/www/wwwroot/dev.anheyu.com"
            BACKUP_DIR="/www/backup/dev.anheyu.com"
            TIMESTAMP=$(date +%Y%m%d-%H%M%S)

            # 创建备份目录
            mkdir -p $BACKUP_DIR

            # 备份当前版本
            if [ -d "$PROJECT_DIR" ] && [ "$(ls -A $PROJECT_DIR)" ]; then
              echo "📦 Creating backup of current static files..."
              tar -czf $BACKUP_DIR/backup-$TIMESTAMP.tar.gz -C $PROJECT_DIR . 2>/dev/null || echo "Backup failed, continuing..."
              
              # 清理旧备份，只保留最新的5份
              echo "🧹 Cleaning old backups (keeping only 5 most recent)..."
              cd $BACKUP_DIR
              ls -t backup-*.tar.gz 2>/dev/null | tail -n +6 | xargs -r rm -f 2>/dev/null || echo "No old backups to clean"
              BACKUP_COUNT=$(ls -1 backup-*.tar.gz 2>/dev/null | wc -l || echo "0")
              echo "📊 Current backup count: $BACKUP_COUNT"
            fi

            echo "✅ Environment prepared for static deployment"

      # 8. 上传静态文件包
      - name: 📤 Upload static files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          timeout: 60s
          source: "dev-anheyu-com-static-latest.tar.gz"
          target: "/tmp/"

      # 9. 部署静态文件
      - name: ✅ Deploy static files
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          timeout: 60s
          command_timeout: 15m
          script: |
            echo "📦 Deploying static files..."

            PROJECT_DIR="/www/wwwroot/dev.anheyu.com"

            # 显示部署前的目录状态
            echo "📂 Directory status before deployment:"
            ls -la $PROJECT_DIR 2>/dev/null || echo "Directory does not exist"

            # 确保目录存在
            mkdir -p $PROJECT_DIR

            # 完全清空目标目录（保留 .htaccess 文件）
            echo "🧹 Cleaning target directory..."
            if [ -f "$PROJECT_DIR/.htaccess" ]; then
              echo "💾 Backing up .htaccess..."
              cp "$PROJECT_DIR/.htaccess" "/tmp/.htaccess.backup" 2>/dev/null || echo "No .htaccess to backup"
            fi

            # 删除所有内容
            rm -rf $PROJECT_DIR/* 2>/dev/null || echo "No files to remove"
            rm -rf $PROJECT_DIR/.* 2>/dev/null || echo "No hidden files to remove"

            # 恢复 .htaccess
            if [ -f "/tmp/.htaccess.backup" ]; then
              echo "🔄 Restoring .htaccess..."
              cp "/tmp/.htaccess.backup" "$PROJECT_DIR/.htaccess"
              rm -f "/tmp/.htaccess.backup"
            fi

            # 验证压缩包是否存在
            echo "🔍 Checking deployment package..."
            echo "📂 Package files in /tmp/:"
            ls -la /tmp/dev-anheyu-com-static* 2>/dev/null || echo "No package files found"

            if [ ! -f "/tmp/dev-anheyu-com-static-latest.tar.gz" ]; then
              echo "❌ Deployment package symlink not found!"
              # 尝试找到实际的tar.gz文件
              ACTUAL_FILE=$(ls /tmp/dev-anheyu-com-static-*.tar.gz 2>/dev/null | head -1)
              if [ -n "$ACTUAL_FILE" ]; then
                echo "📁 Found actual package file: $ACTUAL_FILE"
                echo "🔗 Creating symlink..."
                ln -sf "$(basename "$ACTUAL_FILE")" "/tmp/dev-anheyu-com-static-latest.tar.gz"
                if [ -f "/tmp/dev-anheyu-com-static-latest.tar.gz" ]; then
                  echo "✅ Symlink created successfully"
                else
                  echo "❌ Failed to create symlink"
                  exit 1
                fi
              else
                echo "❌ No deployment package found at all!"
                exit 1
              fi
            else
              # 检查符号链接是否有效
              if [ ! -e "/tmp/dev-anheyu-com-static-latest.tar.gz" ]; then
                echo "❌ Deployment package symlink is broken!"
                # 尝试修复符号链接
                ACTUAL_FILE=$(ls /tmp/dev-anheyu-com-static-*.tar.gz 2>/dev/null | head -1)
                if [ -n "$ACTUAL_FILE" ]; then
                  echo "📁 Found actual package file: $ACTUAL_FILE"
                  echo "🔗 Fixing symlink..."
                  rm -f "/tmp/dev-anheyu-com-static-latest.tar.gz"
                  ln -sf "$(basename "$ACTUAL_FILE")" "/tmp/dev-anheyu-com-static-latest.tar.gz"
                  echo "✅ Symlink fixed"
                else
                  echo "❌ No actual package file found!"
                  exit 1
                fi
              else
                echo "✅ Deployment package found"
              fi
            fi

            echo "📦 Package size: $(ls -lh /tmp/dev-anheyu-com-static-latest.tar.gz | awk '{print $5}')"

            # 验证压缩包内容
            echo "🔍 Verifying package contents:"
            echo "📂 First 10 files in package:"
            tar -tzf /tmp/dev-anheyu-com-static-latest.tar.gz | head -10

            # 检查关键文件是否在压缩包中
            if tar -tzf /tmp/dev-anheyu-com-static-latest.tar.gz | grep -q "^index.html$"; then
              echo "✅ index.html found in package"
            else
              echo "❌ index.html not found in package"
            fi

            if tar -tzf /tmp/dev-anheyu-com-static-latest.tar.gz | grep -q "^static.json$"; then
              echo "✅ static.json found in package"
            else
              echo "❌ static.json not found in package"
            fi

            # 解压静态文件到项目目录
            echo "📦 Extracting static files..."
            cd $PROJECT_DIR
            tar -xzf /tmp/dev-anheyu-com-static-latest.tar.gz

            # 验证解压结果
            echo "📂 Files after extraction:"
            ls -la $PROJECT_DIR | head -15

            # 再次检查关键文件
            echo "🔍 Verifying extracted files:"
            [ -f "$PROJECT_DIR/index.html" ] && echo "✅ index.html extracted successfully" || echo "❌ index.html not found after extraction"
            [ -f "$PROJECT_DIR/static.json" ] && echo "✅ static.json extracted successfully" || echo "❌ static.json not found after extraction"
            [ -d "$PROJECT_DIR/_next" ] && echo "✅ _next directory extracted successfully" || echo "❌ _next directory not found after extraction"

            # 设置正确的权限
            echo "🔧 Setting permissions..."
            chown -R www:www $PROJECT_DIR
            chmod -R 755 $PROJECT_DIR

            # 确保静态文件可读
            find $PROJECT_DIR -type f -exec chmod 644 {} \;
            find $PROJECT_DIR -type d -exec chmod 755 {} \;

            # 清理临时文件
            rm -f /tmp/dev-anheyu-com-static-latest.tar.gz

            echo "✅ Static site deployment completed successfully!"
            echo "🌐 Your static site is now available at your configured domain"

            # 显示部署信息
            echo "📊 Deployment summary:"
            echo "📁 Target directory: $PROJECT_DIR"
            echo "📂 Files deployed: $(find $PROJECT_DIR -type f | wc -l)"
            echo "📦 Directory size: $(du -sh $PROJECT_DIR | cut -f1)"

            # 检查关键文件
            echo "🔍 Checking key files:"
            [ -f "$PROJECT_DIR/index.html" ] && echo "✅ index.html found" || echo "❌ index.html missing"
            [ -f "$PROJECT_DIR/static.json" ] && echo "✅ static.json found" || echo "❌ static.json missing"
            [ -d "$PROJECT_DIR/_next" ] && echo "✅ _next directory found" || echo "❌ _next directory missing"

      # 10. 静态站点验证
      - name: 🏥 Static site verification
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          timeout: 60s
          command_timeout: 5m
          script: |
            echo "🏥 Performing static site verification..."

            PROJECT_DIR="/www/wwwroot/dev.anheyu.com"

            # 检查必要文件是否存在
            echo "🔍 Checking essential files..."

            MISSING_FILES=0

            if [ ! -f "$PROJECT_DIR/index.html" ]; then
              echo "❌ index.html is missing"
              MISSING_FILES=$((MISSING_FILES + 1))
            else
              echo "✅ index.html exists"
            fi

            if [ ! -f "$PROJECT_DIR/static.json" ]; then
              echo "❌ static.json is missing"
              MISSING_FILES=$((MISSING_FILES + 1))
            else
              echo "✅ static.json exists"
              echo "📊 Search index size: $(stat -f%z "$PROJECT_DIR/static.json" 2>/dev/null || stat -c%s "$PROJECT_DIR/static.json") bytes"
            fi

            if [ ! -d "$PROJECT_DIR/_next" ]; then
              echo "❌ _next directory is missing"
              MISSING_FILES=$((MISSING_FILES + 1))
            else
              echo "✅ _next directory exists"
            fi

            # 检查文件权限
            echo "🔒 Checking file permissions..."
            PERM_ISSUES=0

            if [ ! -r "$PROJECT_DIR/index.html" ]; then
              echo "❌ index.html is not readable"
              PERM_ISSUES=$((PERM_ISSUES + 1))
            else
              echo "✅ index.html is readable"
            fi

            # 检查目录结构
            echo "📁 Directory structure:"
            ls -la $PROJECT_DIR | head -10

            # 统计信息
            TOTAL_FILES=$(find $PROJECT_DIR -type f | wc -l)
            TOTAL_SIZE=$(du -sh $PROJECT_DIR | cut -f1)

            echo "📊 Final deployment statistics:"
            echo "   📂 Total files: $TOTAL_FILES"
            echo "   📦 Total size: $TOTAL_SIZE"
            echo "   📁 Location: $PROJECT_DIR"

            # 最终验证
            if [ $MISSING_FILES -eq 0 ] && [ $PERM_ISSUES -eq 0 ]; then
              echo "🎉 Static site verification passed!"
              echo "✅ All essential files are present and accessible"
              echo "🌐 Your static documentation site is ready!"
              echo ""
              echo "💡 Next steps:"
              echo "   - Configure your web server (Nginx/Apache) to serve static files"
              echo "   - Ensure your domain points to $PROJECT_DIR"
              echo "   - Test the site in your browser"
            else
              echo "❌ Static site verification failed!"
              echo "   Missing files: $MISSING_FILES"
              echo "   Permission issues: $PERM_ISSUES"
              exit 1
            fi
