name: 🚀 Deploy SSG to Baota Server

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  deploy:
    name: 🏗️ Build and Deploy SSG
    runs-on: ubuntu-latest

    steps:
      # 1. 检出代码
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      # 2. 设置 pnpm
      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      # 3. 设置 Node.js 环境
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"

      # 4. 安装依赖
      - name: 📦 Install dependencies
        run: pnpm install

      # 5. 构建静态站点
      - name: 🏗️ Build static site
        run: pnpm run build

      # 6. 创建静态站点部署包
      - name: 📦 Create static deployment package
        run: |
          # 检查构建产物
          if [ ! -d "out" ]; then
            echo "❌ Build output directory 'out' not found!"
            exit 1
          fi

          echo "📁 Contents of out directory:"
          ls -la out/

          # 压缩静态文件
          cd out
          tar -czf ../anheyu-docs-static-$(date +%Y%m%d-%H%M%S).tar.gz .
          cd ..

          # 创建最新版本的软链接
          ln -sf anheyu-docs-static-$(date +%Y%m%d-%H%M%S).tar.gz anheyu-docs-static-latest.tar.gz

          echo "✅ Static deployment package created successfully"

      # 7. 准备部署环境
      - name: 🚀 Prepare deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          timeout: 60s
          command_timeout: 10m
          script: |
            echo "🚀 Starting SSG deployment..."

            # 设置变量
            PROJECT_DIR="/www/wwwroot/dev.anheyu.com"
            BACKUP_DIR="/www/backup/anheyu-docs"
            TIMESTAMP=$(date +%Y%m%d-%H%M%S)

            # 创建必要目录
            mkdir -p $BACKUP_DIR
            mkdir -p $PROJECT_DIR

            # 备份当前版本
            if [ -d "$PROJECT_DIR" ] && [ "$(ls -A $PROJECT_DIR)" ]; then
              echo "📦 Creating backup of current static files..."
              tar -czf $BACKUP_DIR/backup-$TIMESTAMP.tar.gz -C $PROJECT_DIR . 2>/dev/null || echo "Backup failed, continuing..."
              
              # 清理旧备份，只保留最新的5份
              echo "🧹 Cleaning old backups (keeping only 5 most recent)..."
              cd $BACKUP_DIR
              ls -t backup-*.tar.gz 2>/dev/null | tail -n +6 | xargs -r rm -f 2>/dev/null || echo "No old backups to clean"
              BACKUP_COUNT=$(ls -1 backup-*.tar.gz 2>/dev/null | wc -l || echo "0")
              echo "📊 Current backup count: $BACKUP_COUNT"
            fi

            # 停止可能在运行的旧服务（如果之前是 Next.js 服务）
            echo "⏹️ Stopping any existing Next.js service..."
            pm2 stop anheyu-docs 2>/dev/null || echo "No PM2 service found"

            # 杀死可能占用端口的进程
            lsof -ti:3000 | xargs -r kill -9 2>/dev/null || echo "No process found on port 3000"

            # 停止宝塔管理的进程（如果存在）
            if [ -f "/www/server/nodejs/vhost/pids/anheyu_docs.pid" ]; then
                PID=$(cat /www/server/nodejs/vhost/pids/anheyu_docs.pid 2>/dev/null || echo "")
                if [ ! -z "$PID" ] && kill -0 $PID 2>/dev/null; then
                    echo "📝 Stopping existing Baota process (PID: $PID)..."
                    kill -9 $PID 2>/dev/null || echo "Process already stopped"
                fi
                rm -f /www/server/nodejs/vhost/pids/anheyu_docs.pid
            fi

            echo "✅ Environment prepared for static deployment"

      # 8. 上传静态文件包
      - name: 📤 Upload static files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          timeout: 60s
          source: "anheyu-docs-static-latest.tar.gz"
          target: "/tmp/"

      # 9. 部署静态文件
      - name: ✅ Deploy static files
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          timeout: 60s
          command_timeout: 15m
          script: |
            echo "📦 Deploying static files..."

            PROJECT_DIR="/www/wwwroot/dev.anheyu.com"

            # 确保目标目录存在
            echo "📁 Ensuring target directory exists..."
            mkdir -p $PROJECT_DIR

            # 检查上传的压缩包是否存在
            if [ ! -f "/tmp/anheyu-docs-static-latest.tar.gz" ]; then
              echo "❌ Static package not found at /tmp/anheyu-docs-static-latest.tar.gz"
              echo "📂 Files in /tmp/:"
              ls -la /tmp/anheyu-docs-static*
              exit 1
            fi

            echo "✅ Found static package: $(ls -lh /tmp/anheyu-docs-static-latest.tar.gz)"

            # 清空目标目录（保留隐藏文件如 .htaccess）
            echo "🧹 Cleaning target directory..."
            find $PROJECT_DIR -mindepth 1 -not -path '*/\.*' -delete 2>/dev/null || echo "Directory already clean"

            # 解压静态文件到项目目录
            echo "📦 Extracting static files..."
            cd $PROJECT_DIR

            if tar -xzf /tmp/anheyu-docs-static-latest.tar.gz; then
              echo "✅ Successfully extracted static files"
              echo "📂 Extracted files:"
              ls -la $PROJECT_DIR | head -10
            else
              echo "❌ Failed to extract static files"
              exit 1
            fi

            # 设置正确的权限
            echo "🔧 Setting permissions..."
            chown -R www:www $PROJECT_DIR
            chmod -R 755 $PROJECT_DIR

            # 确保静态文件可读
            find $PROJECT_DIR -type f -exec chmod 644 {} \;
            find $PROJECT_DIR -type d -exec chmod 755 {} \;

            # 清理临时文件
            rm -f /tmp/anheyu-docs-static-latest.tar.gz

            echo "✅ Static site deployment completed successfully!"
            echo "🌐 Your static site is now available at your configured domain"

            # 显示部署信息
            echo "📊 Deployment summary:"
            echo "📁 Target directory: $PROJECT_DIR"
            echo "📂 Files deployed: $(find $PROJECT_DIR -type f | wc -l)"
            echo "📦 Directory size: $(du -sh $PROJECT_DIR | cut -f1)"

            # 检查关键文件
            echo "🔍 Checking key files:"
            [ -f "$PROJECT_DIR/index.html" ] && echo "✅ index.html found" || echo "❌ index.html missing"
            [ -f "$PROJECT_DIR/static.json" ] && echo "✅ static.json found" || echo "❌ static.json missing"
            [ -d "$PROJECT_DIR/_next" ] && echo "✅ _next directory found" || echo "❌ _next directory missing"

      # 10. 静态站点验证
      - name: 🏥 Static site verification
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          timeout: 60s
          command_timeout: 5m
          script: |
            echo "🏥 Performing static site verification..."

            PROJECT_DIR="/www/wwwroot/dev.anheyu.com"

            # 检查必要文件是否存在
            echo "🔍 Checking essential files..."

            MISSING_FILES=0

            if [ ! -f "$PROJECT_DIR/index.html" ]; then
              echo "❌ index.html is missing"
              MISSING_FILES=$((MISSING_FILES + 1))
            else
              echo "✅ index.html exists"
            fi

            if [ ! -f "$PROJECT_DIR/static.json" ]; then
              echo "❌ static.json is missing"
              MISSING_FILES=$((MISSING_FILES + 1))
            else
              echo "✅ static.json exists"
              echo "📊 Search index size: $(stat -f%z "$PROJECT_DIR/static.json" 2>/dev/null || stat -c%s "$PROJECT_DIR/static.json") bytes"
            fi

            if [ ! -d "$PROJECT_DIR/_next" ]; then
              echo "❌ _next directory is missing"
              MISSING_FILES=$((MISSING_FILES + 1))
            else
              echo "✅ _next directory exists"
            fi

            # 检查文件权限
            echo "🔒 Checking file permissions..."
            PERM_ISSUES=0

            if [ ! -r "$PROJECT_DIR/index.html" ]; then
              echo "❌ index.html is not readable"
              PERM_ISSUES=$((PERM_ISSUES + 1))
            else
              echo "✅ index.html is readable"
            fi

            # 检查目录结构
            echo "📁 Directory structure:"
            ls -la $PROJECT_DIR | head -10

            # 统计信息
            TOTAL_FILES=$(find $PROJECT_DIR -type f | wc -l)
            TOTAL_SIZE=$(du -sh $PROJECT_DIR | cut -f1)

            echo "📊 Final deployment statistics:"
            echo "   📂 Total files: $TOTAL_FILES"
            echo "   📦 Total size: $TOTAL_SIZE"
            echo "   📁 Location: $PROJECT_DIR"

            # 最终验证
            if [ $MISSING_FILES -eq 0 ] && [ $PERM_ISSUES -eq 0 ]; then
              echo "🎉 Static site verification passed!"
              echo "✅ All essential files are present and accessible"
              echo "🌐 Your static documentation site is ready!"
              echo ""
              echo "💡 Next steps:"
              echo "   - Configure your web server (Nginx/Apache) to serve static files"
              echo "   - Ensure your domain points to $PROJECT_DIR"
              echo "   - Test the site in your browser"
            else
              echo "❌ Static site verification failed!"
              echo "   Missing files: $MISSING_FILES"
              echo "   Permission issues: $PERM_ISSUES"
              exit 1
            fi
